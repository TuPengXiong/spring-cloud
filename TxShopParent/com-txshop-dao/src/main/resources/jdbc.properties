## mybatis
spring.datasource.mybatis.typeAliasesPackage=com.tx.**.**
spring.datasource.mybatis.mapperLocations=file:mapper/**/*.xml
spring.datasource.initialize=false
######## image 数据源
spring.datasource.image.url=jdbc:mysql://127.0.0.1:3306/image?characterEncoding=utf-8&useSSL=false
spring.datasource.image.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.image.username=root
spring.datasource.image.password=mysql
spring.datasource.image.driverClassName=com.mysql.jdbc.Driver
# 初始化大小，最小，最大
spring.datasource.image.initialSize=5
spring.datasource.image.minIdle=5
spring.datasource.image.maxActive=100
# 配置获取连接等待超时的时间
spring.datasource.image.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.image.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.image.minEvictableIdleTimeMillis=300000
spring.datasource.image.validationQuery=SELECT 1 FROM DUAL
spring.datasource.image.testWhileIdle=true
spring.datasource.image.testOnBorrow=false
spring.datasource.image.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.image.poolPreparedStatements=true
spring.datasource.image.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.image.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.image.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.image.useGlobalDataSourceStat=true
## mybatis
spring.datasource.image.typeAliasesPackage=com.tx.model.image
spring.datasource.image.mapperLocations=file:mapper/image/*.xml


######## mq 数据源
spring.datasource.mq.url=jdbc:mysql://127.0.0.1:3306/mq?characterEncoding=utf-8&useSSL=false
spring.datasource.mq.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.mq.username=root
spring.datasource.mq.password=mysql
spring.datasource.mq.driverClassName=com.mysql.jdbc.Driver
# 初始化大小，最小，最大
spring.datasource.mq.initialSize=5
spring.datasource.mq.minIdle=5
spring.datasource.mq.maxActive=100
# 配置获取连接等待超时的时间
spring.datasource.mq.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.mq.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.mq.minEvictableIdleTimeMillis=300000
spring.datasource.mq.validationQuery=SELECT 1 FROM DUAL
spring.datasource.mq.testWhileIdle=true
spring.datasource.mq.testOnBorrow=false
spring.datasource.mq.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.mq.poolPreparedStatements=true
spring.datasource.mq.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.mq.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.mq.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.mq.useGlobalDataSourceStat=true
## mybatis
spring.datasource.mq.typeAliasesPackage=com.tx.model.mq
spring.datasource.mq.mapperLocations=file:mapper/mq/*.xml



######## sso 数据源
spring.datasource.sso.url=jdbc:mysql://127.0.0.1:3306/sso?characterEncoding=utf-8&useSSL=false
spring.datasource.sso.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.sso.username=root
spring.datasource.sso.password=mysql
spring.datasource.sso.driverClassName=com.mysql.jdbc.Driver
# 初始化大小，最小，最大
spring.datasource.sso.initialSize=5
spring.datasource.sso.minIdle=5
spring.datasource.sso.maxActive=100
# 配置获取连接等待超时的时间
spring.datasource.sso.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.sso.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.sso.minEvictableIdleTimeMillis=300000
spring.datasource.sso.validationQuery=SELECT 1 FROM DUAL
spring.datasource.sso.testWhileIdle=true
spring.datasource.sso.testOnBorrow=false
spring.datasource.sso.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.sso.poolPreparedStatements=true
spring.datasource.sso.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.sso.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.sso.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.sso.useGlobalDataSourceStat=true
## mybatis
spring.datasource.sso.typeAliasesPackage=com.tx.model.sso
spring.datasource.sso.mapperLocations=file:mapper/sso/*.xml