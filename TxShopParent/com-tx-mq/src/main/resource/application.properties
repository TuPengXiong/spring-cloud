server.port=8800
spring.application.name=mq
#注册中心默认端口就是8761，也可通过下面的方式定义其他端口
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
# 开启健康检查（需要spring-boot-starter-actuator依赖）
eureka.client.healthcheck.enabled=true
# 续约更新时间间隔（默认30秒）
eureka.instance.lease-renewal-interval-in-seconds=30
# 续约到期时间（默认90秒）
eureka.instance.lease-expiration-duration-in-seconds=90
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.cloud.client.ipAddress}:${server.port}/${spring.application.name}

# 集群
#eureka.instance.metadata-map.cluster=turbine

## kafka
spring.cloud.stream.instance-index=0
spring.cloud.stream.instance-count=1
# kafka服务器地址
spring.cloud.stream.kafka.binder.brokers=localhost:9092
# zookeeper
spring.cloud.stream.kafka.binder.zk-nodes=localhost:2181
# 自动添加分区
spring.cloud.stream.kafka.binder.autoAddPartitions=true
# 自动创建topic
spring.cloud.stream.kafka.binder.autoCreateTopics=true
# 最小分区 1
spring.cloud.stream.kafka.binder.minPartitionCount=1
spring.cloud.stream.kafka.binder.requiredAcks=1
spring.cloud.stream.kafka.binder.healthTimeout=10

## 生产者配置
spring.cloud.stream.bindings.userOutput.destination=topic-user
#spring.cloud.stream.bindings.userOutput.content-type=application/json
spring.cloud.stream.bindings.userOutput.producer.partitionCount=1
spring.cloud.stream.bindings.userOutput.producer.sync=true
#spring.cloud.stream.bindings.userOutput.useNativeEncoding=true  
## 消费者配置
spring.cloud.stream.bindings.userInput.destination=topic-user
spring.cloud.stream.bindings.userInput.group=group-user
spring.cloud.stream.bindings.userInput.consumer.startOffset=latest
spring.cloud.stream.bindings.userInput.consumer.autoCommitOffset=false
spring.cloud.stream.bindings.userInput.consumer.concurrency=1
spring.cloud.stream.bindings.userInput.consumer.partitioned=false
spring.cloud.stream.bindings.userInput.consumer.recoveryInterval=10000